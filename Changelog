
1.5.1 / 2018-03-02
==================

  * CHG: Release Notes update.
  * FIX: Missing  __attribute_pure__ macro support in GCC 4.5.1
  * FIX: Bad unpack of Core::DeviceManagement::RegisterMessage.
  * CHG: Better handling of build options.
  * FIX: Compilation warnings.
  * FIX: Some compilation warnings.
  * CHG: General code formatting.
  * FIX: More changes for GCC 4.5.1 compatibility.
  * FIX: Remove one more usage of a template alias.
  * FIX: Remove unsupported const keyword usage.
  * FIX: GCC 4.5.1 doesn't support in class field initialization.
  * FIX: Missing 'override' keyword support in GCC 4.5.1.
  * FIX: Missing support for default virtual destructors in GCC 4.5.1
  * FIX: Use typedef instead of the using keyword.
  * FIX: Don't use template alias.
  * Bump version (v1.5.1)

1.5.0 / 2017-12-15
===================

 * CHG: Clang 4.0 compilation fixes.
 * Release notes update.
 * CHG: General code formatting.
 * CHG: Enable ignored test.
 * CHG: General documentation fixes and update.
 * CHG: Remove deprecated API.
 * CHG: Remove unnecessary helper methods.
 * CHG: Remove unnecessary code duplication.
 * CHG: Refactor template function into normal call.
 * CHG: Remove unnecessary methods.
 * CHG: General code formatting.
 * CHG: Uncrustify configuration update.
 * Bump version (v1.5.0)
 * [TOOLS] FIX: Minor formatting issues in generated code.
 * [TOOLS] FIX: Interface options generation for config.h.in
 * [TOOLS] FIX: Generator for new unit tests layout.
 * CHG: Refactor unit tests to individual binaries.
 * CHG: Refactor common code to test helper code.
 * FIX: Test macro usage after CppUTest update.
 * CHG: Minor documentation fixes.
 * CHG: Be consistent in method naming.
 * CHG: Use simple list for default backend.
 * CHG: Rename day of week enumeration to Days.
 * CHG: Scheduling Entry status to boolean.
 * FIX: Don't process events if not enabled.
 * CHG: Scheduling server status attribute to boolean.
 * CHG: Fix documentation and minor refactor.
 * CHG: Move scheduling API to core module documentation.
 * CHG: Remove redundant code.
 * CHG: Use bool for status attributes.
 * CHG: API Refactor for consistency.
 * CHG: Remove find_if from IEntries API.
 * CHG: Minor comments refactor.
 * FIX: Ensure correct values in pack of booleans.
 * ADD: Simple Keypad profile.
 * ADD: SimpleKeypad interface - KeyPressed message command implemented.
 * ADD: Simple keypad initial support.
 * CHG: Code cleanup.
 * ADD: Weekly scheduling management interface.
 * ADD: Weekly scheduling management initial HF code.
 * ADD: Event Scheduling periodic function.
 * CHG: global code indentation
 * ADD: Batch Program Management service to Unit0.
 * Initial code for the run feature.
 * ADD: Time and Event Scheduling services to Unit0.
 * ADD: Event Scheduler Attributes and CHG on the client.
 * ADD: Event Scheduling - command " Delete All" initial support.
 * ADD: Event Scheduling - command "Delete event entry" initial support.
 * ADD: Event Scheduling - command "get event entry" initial support.
 * ADD: Event Scheduling - Command "Update Status" initial support.
 * CHG: General code indentation.
 * ADD: (event) Scheduling - command "Define Program" initial support.
 * FIX: Scheduling identation
 * ADD: Scheduling Entries DB.
 * ADD: Scheduling / Event Scheduling "activate scheduler" cmd.
 * Fix: Scheduling atributes setter.
 * FIX: global code format.
 * ADD: Event Scheduling initial support. Scheduling messages implemented.
 * CHG: Notify Attribute Reporting of entry add/removal.
 * FIX: Add override keywords in test helpers.
 * CHG: Refactor Server to receive custom Entries backend.
 * ADD: Helper constructor to Entry.
 * FIX: Make number of entries match entries size.
 * CHG: Refactor common code in unit tests.
 * CHG: Minor cleanup & refactor.
 * FIX: Check maximum number of entries before adding entry.
 * CHG: Minor code cleanup.
 * CHG: General code format.
 * FIX: Include paths
 * ADD: BatchProgramManagement - check the action message type.
 * CHG: BatchProgramManagement variable names.
 * ADD: BatchProgramManagement::Client - Callback handler for comand response.
 * FIX: BatchProgramManagement - Change function arguments on client side.
 * ADD: BatchProgramManagement - "Get Program actions" command support.
 * ADD: BatchProgramManagement - "Delete all programs" support.
 * ADD: BatchProgramManagement - "DeleteProgram" command.
 * ADD: BatchProgramManagement - "Invoke Program" support.
 * ADD: Batch program - "define program" error check
 * ADD: BatchProgram - "Define program" command implemented.
 * FIX: Change the batch program management from a interface to a service
 * ADD: initial support for the Batch program management.
 * Fix: Nested unpacks error code return.
 * FIX: Attribute Reporting test code.
 * FIX: GroupTable test code.
 * CHG: Compute profile index on the fly.
 * DD: DimmableColourBulb profile.
 * ADD: ColorBulb profile.
 * CHG: ColourControl::Server::changed.
 * CHG: Remove unnecessary friend conditions.
 * CHG: General code formatting.
 * CHG: General code formatting.
 * FIX: Use correct address when updating group information.
 * CHG: Minor code formatting.
 * ADD: Integration test for multicasting.
 * FIX: Unnecessary interface from Node type.
 * FIX: Allow devices to send messages between interfaces.
 * FIX: Use correct parent for group table client in group management.
 * FIX: Minor typo fix.
 * FIX: Message routing on unit 0.
 * ADD: Group interfaces to devices unit 0.
 * DEL: Remove remaining code from previous implementation.
 * FIX: Fix ColourControl HS_Colour and XY_Colour attributes test.
 * CHG: Use CHECK_EQUALS in check_attribute helper.
 * CHG: Use CHECK_EQUALS in check_attribute helper.
 * CHG: Use CHECK_EQUALS in check_attribute helper.
 * ADD: Authorization hook to GroupManagement::IServer API.
 * ADD: More ColourControl tests to increase code coverage.
 * CHG: Correct the StepHue, StepSaturation and StepXY commands.
 * ADD: ColourControl Stop command.
 * ADD: ColourControl MoveToColourTemperature command.
 * ADD: ColourControl StepXY command.
 * ADD: ColourControl MoveXY command.
 * FIX: ColourControl commands don't change the colour mode twice in FAIL_*.
 * CHG: ColourControl Support mask is given by the compiler.
 * ADD: ColourControl::MoveToXY command.
 * ADD: ColourControl::MoveToHueandSaturation command.
 * ADD: ColourControl::StepSaturation command.
 * ADD: ColourControl::MoveSaturation command.
 * ADD: ColourControl::MovetoSaturation message.
 * ADD: Support for ColourControl::step_Hue command.
 * ADD: Support for ColourControl::move_Hue command.
 * CHG: Port old Move_to_Hue ColourControl::Server implementation to the new transition code.
 * ADD: ColourControl::ITransition class.
 * CHG: Better code coverage.
 * CHG: Minor cleanup.
 * CHG: Make use of the GroupManagement::Group::update method.
 * CHG: Make GroupManagement::Entries::next_address check number of groups.
 * CHG: Documentation refactor.
 * CHG: GroupManagement::Group refactor.
 * CHG: Remove CppUTest sources from code coverage.
 * CHG: Minor code format.
 * CHG: Add more conditions to adding a device to a group.
 * ADD: Helper functions to create Device Management devices.
 * CHG: Minor code cleanup.
 * CHG: GroupManagement::Server is used on HF Concentrator.
 * ADD: Helper to get unit from DeviceManagement::Device class.
 * CHG: Minor refactor and doc update.
 * CHG: Minor code formatting.
 * CHG: GroupManagement::DELETE_CMD update.
 * ADD: CHECK_INDEX helper macro.
 * CHG: Convert ColourControl::Server to ColourControl::IServer.
 * CHG: GroupManagement::REMOVE_CMD update.
 * ADD: Helper function to generate random numbers.
 * ADD: ColorControl MoveToHue command message.
 * CHG: Changed the ColorControl command messages prototypes functions.
 * ADD: Callback functionality for the ColorControl animations.
 * CHG: Use the HS_Colour type when appropriate.
 * CHG: Add ColourControl::HS_Colour helper class.
 * CHG: GroupManagement::ADD_CMD refactor.
 * CHG: Atribute type for ColorControl::xy.
 * CHG: Code refactor & docs update.
 * FIX: Pack payload into messages for GroupManagement::Client commands.
 * CHG: Remove unused code from GroupManagement::Group.
 * CHG: Prepare to add GroupTable calls.
 * ADD: CppUTests - IAttribute comparator
 * ADD: HF::Transport::Group API.
 * CHG: Refactor GroupManagement::Server implementation.
 * FIX: Doc string copy-paste clean up.
 * ADD: Colour Control Message - MoveToTemperature.
 * ADD: Colour Control Message - StepXY.
 * ADD: Colour Control Message - MoveXY.
 * ADD: Colour Control Message - MoveToXY.
 * ADD: Colour Control Message - MoveToHueSaturation.
 * ADD: Colour Control Message - StepSaturation.
 * ADD: Colour Control Message - MoveSaturation.
 * ADD: Colour Control Message - MoveToSaturation.
 * ADD: Colour Control Message - StepHue.
 * ADD: Colour Control Message - MoveHue.
 * ADD: Colour Control Message - MoveToHue.
 * ADD: Helper classes and types for the Colour Control messages.
 * ADD: Initial commit for the Color Control Interface.
 * CHG: Group Management tests refactor.
 * CHG: General code format and cleanup.
 * CHG: Better code coverage support.
 * ADD: Tracker profile implementation.
 * FIX: Copy-paste comment typo.
 * CHG: Minor cleanup.
 * ADD: More tests for better code coverage.
 * ADD: New Level Control options to CMake configuration.
 * ADD: Initial implementation of the UpdateIntervalMessage - Client side.
 * CHG: General code format.
 * ADD: Initial support for READ_ENTRIES command in Group Table interface.
 * CHG: Minor cleanup.
 * ADD: Initial support for REMOVE_ALL command in Group Table interface.
 * ADD: Initial support for REMOVE command in Group Table interface.
 * ADD: Initial support for ADD command in Group Table interface.
 * CHG: Refactor Group Table client tests.
 * ADD: Initial API for Group Table backing store.
 * ADD: Initial implementation for Group Table entries.
 * ADD: Initial code scaffold for Group Table service.
 * CHG: Update uncrustify configuration.
 * ADD: Initial implementation of the UpdateIntervalMessage - Server side.
 * ADD: Initial implementation of the UpdateIntervalMessage.
 * ADD: initial support for Simple Light Sensor profile.
 * ADD: SimpleLightSensor Client helper functions and tests.
 * CHG: SimpleLightSensor Server constructor.
 * ADD: Initial support for the simple light sensor interface.
 * CHG: Make commands optional as per specification.
 * ADD: Initial support for Decrease CMD in Level Control.
 * ADD: Initial support for Increase CMD in Level Control.
 * CHG: Check notify arguments in set level cmd.
 * ADD: CppUTests - IAttribute comparator
 * CHG: Prepare files to include new functions.
 * FIX: Missing #include directive necessary on GCC 5.4.1
 * FIX: Bad code coverage function use.
 * ADD: CppUnitTests for the Group Management code.
 * CHG: Replace the automatically created GroupManagement functions.
 * ADD: Created the entries class.
 * CHG: SerializableHelper calls using the number of members type.
 * ADD: Group helper funtions.
 * CHG: From Server to IServer.
 * FIX: Constructors and const specifier.
 * CHG: SerializableHelperVector template.
 * ADD: CppUTests - IAttribute comparator
 * FIX: Test code template for server role.
 * FIX: Remove warning due to C++14 compatibility.
 * FIX: Unit tests due to CppUTest update.
 * FIX: Remove warning due to C++14 compatibility.
 * FIX: Unit tests due to CppUTest update.
 * CHG: Update CppUTest library.
 * ADD: Example file of YAML config file.
 * FIX: YAML file scaffold generator support.
 * FIX: Bad function call in template.
 * CHG: Rubocop fixes.
 * FIX: Code template for client role commands.
 * ADD: CppUTests for the group management messages.
 * CHG: The min_size and size() for the response message is 1 if code != OK
 * ADD: Empty constructors or default values in arguments. REM: Equal classes.
 * FIX: Remove pure virtual destructors.
 * FIX: Assert logic and function prototype typos
 * ADD: Initial implementation of SerializebleHelpers for containers.
 * ADD: Group Management command messages and responses.
 * CHG: Generalize the SerializableHelper for vector types
 * CHG: Enable SerializableHelper only for pointers of classes.
 * ADD: Template logical operation helpers.
 * FIX: Missing #include directive necessary on GCC 5.4.1
 * FIX: Bad code coverage function use.
 * ADD: Initial code for Group Management Service.
 * CHG: Add tests for attributes in generator helper.
 * FIX: Build with latest GCC.
 * CHG: Updated code generator templates.
 * CHG: Minor changes to code coverage support.
 * CHG: Generator fixes when generating services.
 * CHG: Initial support for using generator using a YAML file.
 * CHG: Helper generator tool refactor.
 * CHG: Exclude debug functions from code coverage reports.
 * ADD: Initial support for code coverage reporting.
 * CHG: Helper generator tool refactor.
 * FIX: Problem with uncrustify configuration and the formatCode.sh script.
 * ADD: Date helper class.
 * ADD: Allow some private functions to be accessed in the unit tests.
 * ADD: Tick method to Time Service Server class.
 * ADD: Initial implementation for Time Service.
 * Fix issue with file paths in Doxygen documentation.

1.4.3 / 2016-03-07
===================

 * General code formatting.
 * Only add sent packets to response filter after registration.
 * Bump version (v1.4.3)

1.4.2 / 2016-03-01
==================

 * Updated the Release Notes.
 * Compile and run example applications as part of project testing.
 * FIX: Update node link on registration.
 * Change helper method to return parent type.
 * Updated README documentation.
 * Bump version (v1.4.2)

1.4.1 / 2016-02-29
==================

 * Fixed usage of attribute support defines for Device Information.

1.4.0 / 2015-12-16
==================

 * Release notes update.
 * Documentation update and fixes.
 * Added test for Github issue #3.
 * Refactor optional interface handling code to separate class.
 * Allow Interface template helper to be used with property UID values.
 * General code formatting.
 * Bump version (v1.4.0)
 * Added support for Environment Monitor profile.
 * Added support for profiles with more that 2 interfaces.
 * Simple LED profile implementation.
 * Simple Button profile implementation.
 * Simple Air Pressure Sensor profile implementation.
 * User Interface Lock profile implementation.
 * Controllable Thermostat profile implementation.
 * Added support for the SOUTA interface.
 * Added required attributes to Device Information Service.
 * Added static pack/unpack methods to SerializableHelper<std::string>
 * Added support for the RSSI interface.
 * Added support for the Air Pressure interface.
 * Added support for the Simple Visual Effects interface.
 * Added support for the Simple Button interface.
 * Initial version of the code generator.
 * Refactor check_attribute functionality.
 * Added helper macro to add interface to build.
 * Refactor top level macros.
 * Refactor SETTER_HELPER macro.
 * Minor documentation fixes.
 * Update CppUTest helper library.
 * Fix warnings when compiling with Clang 3.8
 * Added missing debug functions implementation.
 * Added support for Simple Thermostat interface.
 * Added helper macro to implement attribute setters.
 * Update uncrustify confuration to 0.61

1.3.0 / 2015-06-29
==================

 * Add support for testing OS backtrace support.
 * Fixed libuv releases URL.
 * Removed ignored tests.
 * Minor fixes.
 * Release Notes update.
 * Fix warning when compiling tests with Clang.
 * Fix file header.
 * Bump version (v1.3.0)
 * Fix bug in Protocol::Filters::ResponseRequired filter.
 * Minor comments fixes.
 * Initial implementation of the Simple Humidity Sensor profile.
 * Initial implementation of the Simple Temperature Sensor profile.
 * Minor fixes.
 * Change c library 'assert' overrides.
 * Initial implementation of the Simple Humidity interface.
 * Initial implementation of the Simple Temperature interface.
 * Allow attribute setter function pointer to be empty.
 * Added 'Attribute::value()' setter method.
 * Removed unnecessary virtual modifier.
 * Added support for write/read of signed data to ByteArray.
 * Fix unit tests build for CppUTest update.
 * Update CppUTest library.
 * Added command to list links at the base.

1.2.4 / 2015-06-15
==================

 * Fix typo in GPL License name
 * Bump version (v1.2.4)

1.2.2 / 2014-12-22
==================

 * Release notes update.
 * Minor fixes in the concentrator example application.
 * Fix concentrator routing to handle bind management use cases.
 * Change bind management to support ANY interface functionality.
 * Added support for interface UID ANY.
 * Removed unused configuration option.
 * Fix bug in example application menu help.
 * Cache example application help string.
 * Added version information to example application menu.
 * Bump version (v1.2.2)
 * Remove repeated message detection filter.

1.2.0 / 2014-12-10
==================

 * Added the release notes.
 * Minor formatting.
 * Added stream helpers for core services.
 * Examples - Fix compilation warning in release mode.
 * Example - Added support for getting device information attributes.
 * Example - Added command to base to inject packets.
 * Example - Added commands to send ON, OFF and TOGGLE messages.
 * Example - Added command to create base global binds.
 * Examples - Minor output formatting changes.
 * Examples - Changed help separator from '|' to newline.
 * Added units to example base.
 * Added more output stream helpers for several classes.
 * Created helper class for formatted output of integers in hexadecimal.
 * Added support for parsing all device information attributes.
 * Added helper class to handle friendly name in device information.
 * Minor refactor in SerializableHelper for strings.
 * Add UIDs to all defined interfaces and services.
 * Refactor out stream helpers to headers defining the classes.
 * Added SerializableHelper for std::vector.
 * Added helper function to cast attribute instances.
 * Removing deprecated API.
 * Fixes for CR16C compiler.
 * Added missing return when sending to same device.
 * Minor tweaks to debug output.
 * Changes required due to lack of nullptr support.
 * Use 'this' inside lambdas to call methods.
 * Turn on all options for the Simple power meter.
 * Added missing configuration option.
 * Fix bug with Attribute Pack API change.
 * Don't use unsupported feature on CR16 toolchain.
 * Fix includes.

1.1.1 / 2014-11-17
===================

 * Added configuration option for shared library linkage.
 * Minor refactor of the CMake variables for the project version numbers.
 * Moved compiler checks and flag configurations to separated file.
 * Don't double add unit 0 to device.
 * Remove unit from device when unit is destroyed.
 * Added custom target to create release tarballs.
 * Added getting started documentation.
 * Added FAQ file.
 * README update.
 * Example : Catch all bind entry.
 * Bug fix in HF::Core::DeviceManagement::Unit::has_interface method.
 * Make interface callbacks receive the device address that originated the event.
 * Example : Attribute Reporting service.
 * Fix bug in Attribute Reporting when using SET_ATTRIBUTE commands.
 * Code clean up and formatting.
 * Make periodic processing API consistent.
 * Added support for an optional interface to get containing unit.
 * Added helper class to Attribute Reporting service.
 * Fix bugs in report generation in the Attribute Reporting service.
 * Minor refactor in Attribute Reporting service.
 * Documentation fixes.
 * Fix bugs in rule creation on the Attribute Reporting service.
 * Example : Device information service usage.
 * Added serializable helper for std::string.
 * Example : Level Control interface usage.
 * Make Level Control event level_change receive previous level value.
 * Added helper methods to Level Control interface.
 * Example : On-Off interface usage.
 * Example : Alert interface usage.
 * Added method to send alert to broadcast address.
 * Example : Device registration event handling.
 * Example : Basic device registration.
 * Minor formatting and documentation fixes.
 * Return pointers to custom classes types.
 * Added compilation check for attribute reporting service.
 * Add indexes for Unit 0 services.
 * Minor refactor.
 * Minor fix in the session management.
 * Code clean up.
 * General documentation update.
 * Added CMake target to build documentation.
 * Bump version (v1.1.1)
 * Code cleanup.
 * Add missing call to Core::DeviceManagement::IServer::registered event.

1.1.0 / 2014-10-22
===================

 * Update version numbers to match specification documents.
 * README update.
 * General code format.
 * Fix documentation.
 * Add UID to concentrator device management entry.
 * Added missing attributes support.
 * Version bump (v1.1.0)
 * Updating comments.
 * Added session management to bind management - client side.
 * Added session management to device management - client side.
 * Initial implementation for session management - client side.
 * Minor refactor.
 * Bug fixes.
 * Added missing virtual destructors.
 * Fix compilation under Clang 3.4.
 * Added session management to bind management.
 * Added session management to device management.
 * Initial implementation for session management - server side.
 * Refactor common code.
 * Minor code format.
 * Minor refactor to make APIs consistent.
 * Refactor persistent storage API for Bind Management.
 * Minor refactor.
 * Fix issue with Registration messages.
 * Refactor on Protocol::Filters::ResponseRequired unit tests.
 * Minor fix to comments.
 * Added helper constructors to UIDs.
 * Fix warning using string comparison.
 * Minor code format.
 * Refactor persistent storage API for Device Management.
 * Minor tweak to demo app output.
 * Minor fixes in debug helpers.
 * Fix version in doxygen configuration.

1.0.1 / 2014-10-03
===================

 * Bump version (v1.0.1)
 * Use the types of the profiles templates to return pointer to interface.
 * Added missing return when sending to same device.
 * Minor tweaks to debug output.
 * Process "any device" bindings and route the packets according.
 * Loopback local packets.
 * Skip repeated message check if device is unregistered.
 * Added support to add a catch all bind rule.
 * Fixes in the HF::Profiles::Detector template.
 * Minor code format.
 * Null initialize HF::Devices::Node::Abstract::_link.
 * Fix memory leaks in transport layer implementations.
 * Fix bug in packet routing.
 * Documentation fix.
 * Added support for extra interfaces in HF::Units::Unit template.
 * Send packet to remote device if directly addressed to it.
 * Check if the incoming packet is for us before checking if is repeated.
 * Pass argument as a reference as it MUST NOT be null.
 * Added some default implementations for common API.
 * Refactor interface proxy into helper template.
 * Added support to bind to Concentrator units.
 * Minor refactor.
 * Minor code format.
 * Added API to return extra interfaces implemented by units.
 * Update registration information for already registered devices.
 * Minor refactor : Core::DeviceManagement::Unit.
 * Minor refactor : HF::Devices::Concentrator::Abstract.
 * Don't return raw pointers for Device Management entries.
 * Return default implementation for testing when service not set.
 * Remove all links on HF::Devices::Concentrator::Transport::destroy.
 * Minor fix in comments.
 * Changes required due to lack of nullptr support.
 * Use 'this' inside lambdas to call methods.
 * Fix bug with Attribute Pack API change.
 * Don't use unsupported feature on CR16 toolchain.
 * Update version number in documentation configuration.

1.0.0 / 2014-09-02
===================

 * README update.
 * General code format.
 * Bump version (v1.0.0)
 * Level control now uses SET_ATTR_REQ to change server value.
 * Make handle_attribute return result of SET_ATTR_REQ.
 * Make tests compile for Raspberry PI.
 * Added Alertable profile.
 * Minor cleanup.
 * Fix compilation for GCC 4.7
 * Added initial implementation of event processing.
 * Minor formatting.
 * Added comparison API to IAttribute.
 * Added attribute notification API.
 * Added the attribute reporting to the Unit0 API.
 * Added common Unit0 API.
 * Added pointer to owner interface in IAttribute.
 * Make send API receive const Protocol::Address.
 * Minor fixes in mock support.
 * Attribute reporting server role initial implementation.
 * Added method to IProfile API.
 * Added a helper function to get the attributes for an interface.
 * Minor fixes.
 * Refactor Unit0::handle_proxy to Unit0::find.
 * Minor formatting.
 * Attribute reporting client role initial implementation.
 * Added functions to create the messages for the Attribute Reporting commands.
 * Implementation of all messages and data structures.
 * Moved some methods up a level.
 * Minor cleanup.
 * Rename sendMessage method to send.
 * Minor tweak.
 * Added SerializableHelper for ByteArray.
 * Rename HF::Attributes::uids_t to HF::Attributes::UIDS.
 * Fix hidden overloaded virtual function warning.
 * Fix prototype mismatch.
 * Updating CppUTest framework.
 * Added check for C++11 support.
 * Disable unnecessary formatting tweaks.
 * Minor code format.
 * Adding initial classes necessary for Attribute Reporting.
 * Fix documentation configuration.
 * Minor fix.

0.4.0 / 2014-08-18
===================

 * README update.
 * Bump version (v0.4.0)
 * Initial support for retrieving the mandatory Device Information attributes.
 * Minor code cleanup and format.
 * HF::UID::UID's refactor.
 * Make CloneableC interface a template.
 * Added deregistered device address to Deregister device command response.
 * Doxygen configuration update.
 * Minor code format.
 * Created a filter to check if a response to a given message is required.
 * Added missing responses in Bind Management.
 * Minor fixes.
 * Added filter to drop repeated messages.
 * General code format.
 * Don't pollute library with std namespace symbols.
 * Changed unit test build option to be in HF namespace.
 * Don't allocate packets on the stack, use the heap.
 * Better support for nullptr in older gcc's.
 * Remove new operator attribute.
 * Adding eclipse project files.
 * Moved stream helpers to common debug functionality.
 * Minor fixes in the debug helpers.
 * Minor fix in include.
 * Minor fixes in the build configuration.
 * Ignoring build folder.
 * Fix missing namespace compilation issue.
 * Update version header file.

0.3.2 / 2014-07-29
===================

 * Updated copyright information.
 * Bump version (v0.3.2)
 * Make tests pass again.
 * Fixed tests for GCC prior to 4.8.

0.3.1 / 2014-07-24
===================

 * Minor fixes in example application.
 * Disabling debug output.
 * README and Doxygen configuration update.
 * Update all files to reflect license information.
 * Remove warning when compiling the Json library.
 * Changed example base application configuration.
 * Added JSON library.
 * General code format.
 * Fix bug in the example application.
 * Command refactor in example application.
 * Refactor example application save/restore functionality.
 * Minor fix in help string.
 * Increment message application reference on send.
 * Update example application to use Transport helper classes.
 * Bump version (v0.3.1)
 * Added helper classes for implementing HAN-FUN transport layers.
 * CMake configuration update.
 * Minor fix (std::stoi).
 * Moved debug support to separated include file.
 * Remove ULE specific API for more general support option.
 * Don't run tests when cross-compiling.
 * Make libuv use the correct compiler when cross-compiling.

0.3.0 / 2014-07-01
===================

 * Updated README file.
 * Make libuv be build from release tar.
 * Minor changes in the logging output.
 * Fix bug in the reactivation of the logging stream.
 * README file update.
 * General code format and cleanup.
 * Bump version. (v0.3.0)
 * Complete overhaul of the example application(s).
 * Route incoming packet based on the Bind Management entries.
 * Update link address on connect if device is registered.
 * Bug fix in HF::Devices::Concentrator::link.
 * Allow easier override of Concentrator unit0 implementation.
 * Don't save DeviceManagement entry if broadcast address.
 * Added helper functions to pack/unpack all types of UIDs.
 * Removing unnecessary 'virtual' keywords.
 * Fix build for Lantiq SDK.
 * Adding missing include.
 * Remove binding entries when deregistering a device.
 * Use custom Unit0 for test Device and Concentrator.
 * AbstractUnit auto-adds to device.
 * Core::BindManagement : Initial implementation.
 * Don't send Unit0 in the registration message.
 * Added operators for HF::Protocol::Address.
 * Added missing cases to switch.
 * Minor refactor and code format.
 * Changed from custom command to custom target for running the unit tests.
 * Fix shadowed method.
 * Removed unused functions.
 * Adding missing virtual destructors.
 * Moved operators to be at the same namespace level.
 * Minor include refactor.
 * Updating CppUTest sub-module.
 * Bug fix in Common::Interface equals function.
 * Documentation update.
 * General code format.
 * Code refactor.
 * Removed unnecessary dependency.
 * Remove stray 'using namespace'.
 * Fix compile warning.
 * Added function to map profiles UIDs to implemented interfaces.
 * Added IUnit0 interface for each type of device.
 * Make core services reference Unit0 not IDevice.
 * Minor name refactor.
 * Make units receive a reference to the device not a pointer.
 * Use references in Profile2 helper.
 * Fix bug in Dimmable Light profile.
 * Updating cpputest framework.
 * Fix issue with example application compilation.
 * Make memory leak detection work with STL classes.
 * Minor documentation fixes.
 * Minor refactor.

0.2.0 / 2014-04-22
===================

 * Bump version (v0.2.0)
 * Initial code for Base example application.
 * Initial support for ULE transport layer API.
 * Make usage of 'auto' variables when using 'find_if'.
 * Added 'const' modifier to some of the API.
 * Added library and headers installation rules.
 * Minor code refactor.
 * Changed Transport::Link::send API.
 * Minor change to Attributes::List::operator[].
 * Changed Protocol::Message payload to ByteArray.
 * Fix bug in Attributes::Response::pack and Attributes::Response::unpack methods.
 * Fixed bug in GetAttributePack::Response::size.
 * Fix minor indentation issue.
 * Use the HF::Common namespace for the respective classes.

0.1.0 / 2014-03-18
===================

 * Bump version (v0.1.0)
 * Major code refactor & format.
 * Removing unused functions.
 * Added very simple example application.
 * Don't compile with exceptions in Release build.
 * Implemented IDevice::send and IDevice::receive based on Transport API.
 * Added template to hold Unit 0 services.
 * Minor refactor on DeviceManagementClient tests.
 * Make Unit attributes private.
 * Change device unit list from vector to forward_list.
 * Rethinking Transport API.
 * Add link parameter to AbstractUnit::sendMessage method.
 * Adding default arguments to Device and Concentrator templates.
 * Added handle method the IUnit interface.
 * Fix bug in DeviceManagementServer::register_device.
 * Fix bug in DeviceManagementClient::register_device.
 * Added helper methods to send commands to the broadcast address.
 * Comments fixes.
 * Minor code format.
 * Allow ByteArray to be initialized directly.
 * Added missing devices.h include.
 * Added helper stream operator << for uint8_t.
 * Fix wrong interfaces definitions in Dimmer Switch profile.
 * Added SerializerHerlper for Serializable pointers.
 * Make attribute_uids_t implement the Serializable interface.
 * Change message UID check due to clash with IProfile::uid method.
 * Fix bug in DeviceManagement::RegisterMessage::pack when UID is nullptr.
 * Make ByteArray inherit publicly from vector.
 * Interfaces can define their own Attribute Pack ID.
 * Attributes API : Device Management API.
 * Minor tweak on the code formmating script.
 * Changed implementation of profiles containing 2 interfaces.
 * Handle atomic set attribute pack requests.
 * Handle set attribute pack requests.
 * Handle get attribute pack requests.
 * Refactor Interface's attribute creation into factory functions.
 * Handle set attribute requests.
 * Added ByteArray::available method.
 * Handle get attribute requests.
 * Attributes API : Simple Power Meter interface.
 * Attributes API : Level Control interface.
 * Attributes API : OnOff interface.
 * Attributes API : Alert interface.
 * Initial Attribute API.
 * Added Protocol::Message constructor to help create responses.
 * Moved Precision and Time types to common definitions.
 * Added helper methods the ByteArray to read/write booleans.
 * Interface::handle API change.
 * Changes to handle interface role usage definition.
 * Interface handle API refactor.
 * Removed using namespace from include files.
 * Adding test for DefaultDeviceManagementServer::entries method.
 * Device Management - Server role : Deregister command.
 * Minor code refactor and format.
 * Added equality operators to DeviceManagement::Device.
 * Protect stl:less operator of UID pointers.
 * Device Management - Client role : Deregister command.
 * Disable code formatter for some code constructs.
 * Generate configuration files to build folder.
 * Device Management - Server role : Register command.
 * Changed Interface::handle API to return a result code.
 * Added custom configuration file for testing.
 * Moved GCC workarounds to separated include file.
 * Minor Transport API change.
 * Refactor UIDs implementation for better code reuse.
 * Added RFPI type to UIDs.
 * Code format and cleanup.
 * Major refactor.
 * Moved IUnit interface from common.h to units.h
 * Initial transport layer API.
 * Added test to check for register response with fail code.
 * Refactor check_alarm method to template function check_index.
 * Refactor payload size check to separated method.
 * Refactor HF::Protocol::Message::Address to HF::Protocol::Address.
 * Fix warning when compiling for CR16C.
 * Removed usage of auto keyword as it is not supported by the CR16C compiler.
 * Added simple support for nullptr for GCC < 4.6.0
 * Refactor compile flags for easier usage.
 * Fixed bug in RegisterMessage UID handling.
 * Ignore all build folders.
 * Fix compile problem with older cmake.
 * Compile without RTTI support.
 * Added documentation configuration files.
 * Minor code formatting.
 * Device Management - Client role : Register command.
 * Added common interface for all units.
 * Clone UID when adding to DeviceManagement::RegisterMessage.
 * Fix compile problem on profiles tests with SimplePowerMeter.
 * Initial implementation for the core's device information interface.
 * Added version constants for Core, Profiles and Interfaces.
 * Initial implementation for DeviceManagement messages.
 * Initial implementation for the UID classes.
 * Documentation fix.
 * Minor refactoring.
 * Initial implementation for profiles.
 * Initial implementation of the Simple Power Meter interface.
 * Initial implementation of the Level Control interface.
 * Initial implementation of the OnOff interface.
 * Initial implementation of the Alert interface.
 * Initial implementation of the protocol layer.
 * Updating code format configuration.
 * Added CppUTest test harness.
 * Added README file.
 * Initial CMake support.
 * Initial project structure.
 * Initial commit.
