// =============================================================================
/*!
 * @file       src/interfaces/<%= @interface.name %>.cpp
 *
 * This file contains the implementation of the common functionality for the
 * <%= @interface.to_doc %> interface.
 *
 * @version    x.x.x
 *
 * @copyright  Copyright &copy; &nbsp; <%= Date.today.year %> ULE Alliance
 *
 * For licensing information, please see the file 'LICENSE' in the root folder.
 *
 * Initial development by Bithium S.A. [http://www.bithium.com]
 */
// =============================================================================

#include "hanfun/interfaces/<%= @interface.name %>.h"

// =============================================================================
// API
// =============================================================================

using namespace HF;
using namespace HF::Interfaces;
using namespace HF::Interfaces::<%= @interface.to_class %>;

// =============================================================================
// Interfaces::create_attribute
// =============================================================================
/*!
 *
 */
// =============================================================================
HF::Attributes::IAttribute *Interfaces::create_attribute(Server * server, uint8_t uid)
{
  if (server != nullptr)
  {
    return server->attribute(uid);
  }
  else
  {
    return <%= @interface.to_class %>::create_attribute(uid);
  }
}

// =============================================================================
// <%= @interface.to_class%>::create_attribute
// =============================================================================
/*!
 *
 */
// =============================================================================
HF::Attributes::IAttribute *<%= @interface.to_class %>::create_attribute(uint8_t uid)
{
   UNUSED(uid);
   return nullptr;  // FIXME Create an attribute for the given uid.
}
